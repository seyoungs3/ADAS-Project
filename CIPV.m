clc
close all
clear all
clear cipv_candidate_counter
load testset1.mat

x_temp = 0:0.1:60;

% Ïù¥ÎØ∏ÏßÄ ÎØ∏Î¶¨ Î∂àÎü¨Ïò§Í∏∞
good_img = imread('img/good.png');
bad_img = imread('img/bad.png');

% Ï∞®ÏÑ† Ï†ïÎ≥¥
c0_l = LaneMarkPosition_Lh_ME;
c1_l = LaneMarkHeadAngle_Lh_ME;
c2_l = LaneMarkModelA_Lh_ME;
c3_l = LaneMarkModelDerivA_Lh_ME;
qual_l = LaneMarkQuality_Lh_ME;
type_l = LaneMarkType_Lh_ME;
vr_l = LaneMarkViewRange_Lh_ME;

c0_r = LaneMarkPosition_Rh_ME;
c1_r = LaneMarkHeadAngle_Rh_ME;
c2_r = LaneMarkModelA_Rh_ME;
c3_r = LaneMarkModelDerivA_Rh_ME;
qual_r = LaneMarkQuality_Rh_ME;
type_r = LaneMarkType_Rh_ME;
vr_r = LaneMarkViewRange_Rh_ME;

tunnel_idx = find(Tunnel==1);
PosLon_tunnel = PosLon(tunnel_idx);
PosLat_tunnel = PosLat(tunnel_idx);

scrsz = get(0, "ScreenSize");
figure("Position", [scrsz(3)/20 scrsz(4)*2/10 scrsz(3)*13/20 scrsz(4)*7/10]);

angles = linspace(0, 2*pi, 720);
radius = 1.5;
xCenter = 0;
yCenter = 0;
x = radius * cos(angles) + xCenter;
y = radius * sin(angles) + yCenter;



rel_dist_log = [];
rel_vel_log = [];
i_log = [];
ttc_level_log = [];
road_slope_deg = zeros(size(AnglePitch));

for i = 64000:100:240000
    ttc_stage = 0;  % ‚Üê Ïù¥ Ï§Ñ Ï∂îÍ∞Ä!

    global cipv_candidate_counter
    if isempty(cipv_candidate_counter)
        cipv_candidate_counter = zeros(1, 10);  % Ï∞®Îüâ Ïàò ÏµúÎåÄ 10ÎåÄ Í∞ÄÏ†ï
    end
    subplot(6,5,[1 2 3 4 5 6 7 8 9 10])
    x_l_vr = 0:0.1:vr_l(i);
    x_r_vr = 0:0.1:vr_r(i);

    y_l_temp = c0_l(i) + c1_l(i)*x_temp + c2_l(i)*x_temp.^2 + c3_l(i)*x_temp.^3;
    y_r_temp = c0_r(i) + c1_r(i)*x_temp + c2_r(i)*x_temp.^2 + c3_r(i)*x_temp.^3;

    y_l_vr = c0_l(i) + c1_l(i)*x_l_vr + c2_l(i)*x_l_vr.^2 + c3_l(i)*x_l_vr.^3;
    y_r_vr = c0_r(i) + c1_r(i)*x_r_vr + c2_r(i)*x_r_vr.^2 + c3_r(i)*x_r_vr.^3;

    lane_l_qual = num2str(qual_l(i));
    lane_r_qual = num2str(qual_r(i));

    % Ï£ºÌñâ ÏòàÏ∏° Í≤ΩÎ°ú
    c2_pred(i) = YAW_RATE(i) * pi/180 / Speed2D(i) / 2;
    y_path = c2_pred(i) * x_temp.^2;

    draw_veh(0, 0, -pi/2, 2, 4.5, 'b', 1);
     % ÎÇ¥ Ï∞®Îüâ ÏÜçÎèÑ ÌëúÏãú
    ego_velx = Speed2D(i);
    % ÎÇ¥ ÏÜçÎèÑ
    text(0, 5, sprintf('%.1f m/s', ego_velx), ...
        'Color', 'b', 'FontSize', 10, 'FontWeight', 'Bold', ... 
        'HorizontalAlignment', 'center');
    hold on
    grid on

    % Ï∞®Îüâ ÏúÑÏπò Îç∞Ïù¥ÌÑ∞
    veh_posX = [PosX01(i), PosX02(i), PosX03(i), PosX04(i), PosX05(i), PosX06(i), PosX07(i), PosX08(i)];
    veh_posY = [PosY01(i), PosY02(i), PosY03(i), PosY04(i), PosY05(i), PosY06(i), PosY07(i), PosY08(i)];

    cipv_idx = -1;
    min_dist = inf;

    cipv_idx = 0;
    min_dist = inf;

    for k = 1:length(veh_posX)
        x_obj = veh_posX(k);
        y_obj = veh_posY(k);

        if x_obj > 0 && x_obj <= max(x_temp)
            y_pred = interp1(x_temp, y_path, x_obj, 'linear', 'extrap');
            y_left = interp1(x_temp, y_l_temp, x_obj, 'linear', 'extrap');
            y_right = interp1(x_temp, y_r_temp, x_obj, 'linear', 'extrap');

            % Ï∞®ÏÑ† Ï¢åÏö∞ Î∞òÏ†Ñ Î≥¥Ï†ï
            if y_left < y_right
                tmp = y_left;
                y_left = y_right;
                y_right = tmp;
            end

            % Ï°∞Í±¥ ÎßåÏ°± Ïó¨Î∂Ä
            if y_obj < y_left && y_obj > y_right && abs(y_obj - y_pred) < 3.0
                cipv_candidate_counter(k) = cipv_candidate_counter(k) + 1;
            else
                cipv_candidate_counter(k) = 0;
            end

            % ÎàÑÏ†Å Ï°∞Í±¥ ÎßåÏ°±Ìïú Í≤ΩÏö∞ÏóêÎßå CIPV ÌõÑÎ≥¥Î°ú Í∞ÑÏ£º
            if cipv_candidate_counter(k) >= 5  % ÏïΩ 2Ï¥à (10Hz Í∏∞Ï§Ä)
                dist = sqrt(x_obj^2 + y_obj^2);
                if dist < min_dist
                    min_dist = dist;
                    cipv_idx = k;
                end
            end
        end
    end
    % Ï∞®Îüâ ÏãúÍ∞ÅÌôî
    for k = 1:length(veh_posX)
        if k == cipv_idx
            draw_veh(veh_posX(k), veh_posY(k), -pi/2, 2, 4.5, 'g', 2); % CIPV Í∞ïÏ°∞
            % Îç∞Ïù¥ÌÑ∞ÏóêÏÑú Ï∞®Îüâ ÏÜçÎèÑ Í∞ÄÏ†∏Ïò§Í∏∞ (Ïòà: VelX01, VelX02 Îì±)
            cipv_velx_array = [VelX01(i), VelX02(i), VelX03(i), VelX04(i), VelX05(i), VelX06(i), VelX07(i), VelX08(i)];
            cipv_velx = cipv_velx_array(cipv_idx);  % Ìï¥Îãπ Ï∞®ÎüâÏùò ÏÜçÎèÑ Í∞ÄÏ†∏Ïò§Í∏∞

            % Ï∞®Îüâ ÏúÑÏóê ÏÜçÎèÑ ÌÖçÏä§Ìä∏ ÌëúÏãú
            text(veh_posX(k), veh_posY(k) + 5, sprintf('%.1f m/s', cipv_velx + ego_velx), ...
                'Color', 'r', 'FontSize', 10, 'FontWeight', 'Bold', ...
                'HorizontalAlignment', 'center');
        else
            draw_veh(veh_posX(k), veh_posY(k), -pi/2, 2, 4.5, 'k', 1);
        end
    end

    % Ï∞®ÏÑ† Î∞è ÏòàÏ∏° Í≤ΩÎ°ú ÏãúÍ∞ÅÌôî
    plot(x_temp, -y_l_temp, 'k--')
    plot(x_temp, -y_r_temp, 'k--')
    plot(x_l_vr, -y_l_vr, 'g')
    plot(x_r_vr, -y_r_vr, 'g')
    plot(x_temp, y_path, 'c--')

    text(3, 3, lane_l_qual)
    text(3, -3, lane_r_qual)
    xlim([-60 120])
    ylim([-15 15])
    hold off
    drawnow



    % ÎÇòÎ®∏ÏßÄ subplot ÏãúÍ∞ÅÌôîÎäî Í∑∏ÎåÄÎ°ú Ïú†ÏßÄ


    %%
    rel_vel = 0; ttc = inf; ttc_predicted = inf;
    warning_level = ''; focus_warning = ''; slip_warning = ''; warning_color = 'k';
    rel_dist = NaN;

    % ========== Ïö¥Ï†ÑÏûê ÏßëÏ§ëÎèÑ ÌèâÍ∞Ä ==========
    steer_torque_threshold = 0.1;
    focus_time_window = 100;

    if i > focus_time_window
        recent_torque = CR_Mdps_DrvTq(i-focus_time_window:i);
        low_torque_ratio = sum(abs(recent_torque) < steer_torque_threshold) / focus_time_window;
        high_torque_ratio = sum(abs(recent_torque) > steer_torque_threshold) / focus_time_window;
    else
        low_torque_ratio = 0;
        high_torque_ratio = 0;
    end

    % GPS Í∏∞Î∞ò ÏßÅÏÑ†ÎèÑÎ°ú ÌåêÎã® (Î≤°ÌÑ∞ Í∞Ñ Î∞©Ìñ• Î≥ÄÌôîÎüâ Í∏∞Ï§Ä)
    if i > 10
        dx = PosLon(i) - PosLon(i-10);
        dy = PosLat(i) - PosLat(i-10);
        dx2 = PosLon(i-10) - PosLon(i-20);
        dy2 = PosLat(i-10) - PosLat(i-20);
        angle_diff = abs(atan2(dy, dx) - atan2(dy2, dx2));
    else
        angle_diff = 0;
    end

    is_straight = angle_diff < deg2rad(5);  % ÏßÅÏÑ†ÎèÑÎ°ú ÌåêÎã® Í∏∞Ï§Ä
    is_curve = angle_diff > deg2rad(20);

    subplot(6,5,17)
    % ÏßëÏ§ëÎèÑ Í≤ΩÍ≥† Ï°∞Í±¥
    if is_straight && high_torque_ratio > 0.9
        focus_warning = 'Ï£ºÏùò! Ïö¥Ï†ÑÏûê ÏßëÏ§ëÎèÑ ÎÇÆÏùå';
        warning_color = 'r';
        imshow(bad_img)

    elseif is_curve && low_torque_ratio > 0.9
        focus_warning = 'Ï£ºÏùò! Ïö¥Ï†ÑÏûê ÏßëÏ§ëÎèÑ ÎÇÆÏùå';
        warning_color = 'r';
        imshow(bad_img)
    else
        focus_warning = '';
        imshow(good_img)
    end


    if cipv_idx > 0
        % CIPV ÏúÑÏπò
        x_cipv = veh_posX(cipv_idx);
        y_cipv = veh_posY(cipv_idx);
        rel_dist = sqrt(x_cipv^2 + y_cipv^2); % Ïú†ÌÅ¥Î¶¨Îìú Í±∞Î¶¨

        % CIPV ÏÜçÎèÑ (VelX01 ~ VelX08 Î≥ÄÏàò ÏÇ¨Ïö©)
        cipv_velx_array = [VelX01(i), VelX02(i), VelX03(i), VelX04(i), VelX05(i), VelX06(i), VelX07(i), VelX08(i)];
        cipv_velx = cipv_velx_array(cipv_idx);
        % ÎÇ¥ Ï∞®Îüâ ÏÜçÎèÑ

        ego_velx = Speed2D(i);
        rel_vel = ego_velx - cipv_velx; % ÏÉÅÎåÄÏÜçÎèÑ (Ï†ïÎ©¥ Í∏∞Ï§Ä)

        % TTC Í≥ÑÏÇ∞ (ÏÉÅÎåÄÏÜçÎèÑÍ∞Äsub0Î≥¥Îã§ ÌÅ¥ ÎïåÎßå)
        if rel_vel > 0
            ttc = rel_dist / rel_vel;
        else
            ttc = inf;
        end

        % ÏÑºÏÑú ÏòàÏ∏° TTC
        ttc_c_array = [TTC_C_1(i), TTC_C_2(i), TTC_C_3(i), TTC_C_4(i), TTC_C_5(i), TTC_C_6(i), TTC_C_7(i), TTC_C_8(i)];
        ttc_predicted = ttc_c_array(cipv_idx);

        % TTC Í∏∞Î∞ò Í≤ΩÍ≥† ÌåêÎã®
        if ttc < 1.5 || ttc_predicted < 1.5
            warning_level = 'üö® Í≤ΩÍ≥†! (3Îã®Í≥Ñ)';
            warning_color = 'r';
            ttc_stage = 3;
        elseif ttc < 3.0 || ttc_predicted < 3.0
            warning_level = '‚ö†Ô∏è Ï£ºÏùò (2Îã®Í≥Ñ)';
            warning_color = 'm';
            ttc_stage = 2;
        elseif ttc < 5.0 || ttc_predicted < 5.0
            warning_level = '   Í≤ΩÍ≥Ñ (1Îã®Í≥Ñ)';
            warning_color = [1.0,0.6,0.0];
            ttc_stage = 1;
        else
            warning_level = 'Ï†ïÏÉÅ';
            warning_color = 'g';
            ttc_stage = 0;
        end

        subplot(6,5,[1 2 3 4 5 6 7 8 9 10])


        text(-55, 18, ...
            sprintf('CIPV: #%d | TTC: %.1fs (Pred: %.1fs) | Œîv: %.1f m/s | %s %s', ...
            cipv_idx, ttc, ttc_predicted, rel_vel, warning_level, focus_warning), ...
            'Color', warning_color, ...
            'FontSize', 13, ...
            'HorizontalAlignment', 'left', ...
            'FontWeight', 'bold');

        drawnow
    end
        %%

        subplot(6, 5, [11 16])
        % ÌòÑÏû¨ ÏúÑÏπò Ïù∏Îç±Ïä§ iÎäî Ï†ïÏùòÎêòÏñ¥ ÏûàÎã§Í≥† Í∞ÄÏ†ï
        currentLat = PosLat(i);
        currentLon = PosLon(i);

        % ÏßÄÎèÑ ÏúÑÏóê ÌòÑÏû¨ ÏúÑÏπòÎßå ÌëúÏãú
        geoplot(currentLat, currentLon, 'ro', 'LineWidth', 2, 'MarkerSize', 10);
        hold on
        geobasemap streets % ÏßÄÎèÑ Ïä§ÌÉÄÏùº ÏÑ§Ï†ï

        % Ï§å Ïù∏: ÌòÑÏû¨ ÏúÑÏπòÎ•º Ï§ëÏã¨ÏúºÎ°ú Ï¢ÅÏùÄ Î≤îÏúÑ ÏÑ§Ï†ï
        zoomRange = 0.001; % Ïà´ÏûêÍ∞Ä ÏûëÏùÑÏàòÎ°ù Îçî ÌôïÎåÄÎê®
        geolimits([currentLat - zoomRange, currentLat + zoomRange], ...
            [currentLon - zoomRange, currentLon + zoomRange]);
        hold off;
        drawnow


        %%
        % hold on
        % ÏÉÅÎåÄÍ±∞Î¶¨/ÏÜçÎèÑ Í∏∞Î°ù
        i_log(end+1) = i;
        rel_dist_log(end+1) = rel_dist;
        rel_vel_log(end+1) = rel_vel;
        % ttc_level_log(end+1) = ttc_stage;

        if cipv_idx > 0
            ttc_level_log(end+1) = ttc_stage;
        else
            ttc_level_log(end+1) = NaN;  % ÎòêÎäî 0 Îì±ÏúºÎ°ú ÎåÄÏ≤¥ Í∞ÄÎä•
        end
        %%

      % Í±∞Î¶¨ Í∑∏ÎûòÌîÑ subplot(2Ìñâ 4Ïó¥)
     subplot(6,5,[14 15 19 20] ) ;
     cla;
    plot(i_log, rel_dist_log, 'b');
 xlim([i-1000 i]);  % iÎäî ÌòÑÏû¨ ÌîÑÎ†àÏûÑ Ïù∏Îç±Ïä§
ylim([-20 80]);  % yÏ∂ï Î≤îÏúÑ Í≥†Ï†ï
    title('CIPV Í±∞Î¶¨');
    % xlabel('ÏÉòÌîå');
    ylabel('Í±∞Î¶¨ [m]');
     grid on;
     drawnow;
%% 

    % ÏÜçÎèÑ Í∑∏ÎûòÌîÑ subplot(3Ìñâ 4Ïó¥)
    subplot(6,5,[24 25 29 30]) ;
      cla;
    plot(i_log, rel_vel_log, 'r');
  xlim([i-1000 i]);  % iÎäî ÌòÑÏû¨ ÌîÑÎ†àÏûÑ Ïù∏Îç±Ïä§
ylim([-20 60]);  % yÏ∂ï Î≤îÏúÑ Í≥†Ï†ï
    title('ÏÉÅÎåÄ ÏÜçÎèÑ');
    % xlabel('ÏÉòÌîå');
    ylabel('Œîv [m/s]');
     grid on;

     drawnow;

%% 

        % ÎèÑÎ°ú Í∏∞Ïö∏Í∏∞ Í≥ÑÏÇ∞, ÌîåÎ°Ø
        road_slope_deg(i) = AnglePitch(i) * pi / 180;
        subplot(6,5,[22,23,27,28]);
        plot(road_slope_deg, 'LineWidth', 1.5);
        xlabel('Time (s)');
        ylabel('Road Slope (¬∞)');
        title('Road Inclination Analysis');
        grid on;
        ylim([-1 1]);
        drawnow;

        %%
        % subplot(5,5,7) - Î∞∞ÌÑ∞Î¶¨Ìòï Îû®ÌîÑ 3Îã®Í≥Ñ
        subplot(6,5,12);
        cla;
        axis off;
        hold on;

        % Î∞ïÏä§ ÏúÑÏπò ÏÑ§Ï†ï
        box_x = 	[0.2, 0.4, 0.6];  % x ÏúÑÏπò (Ïôº ‚Üí Ïò§)
        box_y = 0.4;               % y Í≥†Ï†ï
        w = 0.2; h = 0.3;         % width, height

        % ÏÉâÏÉÅ ÏßÄÏ†ï
        colors = {'[0.6 0.6 0.6]', '[0.6 0.6 0.6]', '[0.6 0.6 0.6]'}; % Í∏∞Î≥∏ ÌöåÏÉâ
        ttc_text = 'ÎØ∏ Ïù∏Ïãù';
        if ttc_stage == 1
            colors{1} = 'g';  % Ï¥àÎ°ù 1Ïπ∏
        elseif ttc_stage == 2
            colors{1} = 'y'; colors{2} = 'y';  % ÎÖ∏Îûë 2Ïπ∏
        elseif ttc_stage == 3
            colors{1} = 'r'; colors{2} = 'r'; colors{3} = 'r';  % Îπ®Í∞ï 3Ïπ∏
        end

        % Î∞ïÏä§ Í∑∏Î¶¨Í∏∞
        for n = 1:3
            rectangle('Position', [box_x(n), box_y, w, h], ...
                'FaceColor', colors{n}, 'EdgeColor', 'k', 'LineWidth', 1.5);
        end
        title('TTC Îã®Í≥Ñ ÌëúÏãú');

        
        %% Ïà´Ïûê ÌëúÏãú Í∞úÏÑ†
        subplot(6,5,13);
        cla;
        axis off;

      % TTC ÏãúÍ∞ÑÍ∞í ÌÖçÏä§Ìä∏ ÏÑ§Ï†ï
if isinf(ttc)
    ttc_text = 'TTC: ‚àû';
elseif isnan(ttc)
    ttc_text = 'TTC: N/A';
else
    ttc_text = sprintf('TTC: %.2f s', ttc);
end

% TTC Îã®Í≥Ñ ÌÖçÏä§Ìä∏ ÏÑ§Ï†ï
ttc_label = {'\color{green}‚úÖ ÏïàÏ†Ñ', ...
             '\color[rgb]{1.0,0.6,0.0}‚ö† Ï£ºÏùò', ...
             '\color{red}üö® ÏúÑÌóò'};

if ttc_stage >= 1 && ttc_stage <= 3
    ttc_stage_text = ttc_label{ttc_stage};
else
    ttc_stage_text = '\color{gray}ÎØ∏ Ïù∏Ïãù';
end

% TTC ÏãúÍ∞Ñ ÌÖçÏä§Ìä∏ Ï∂úÎ†• (ÏúÑ)
text(0.5, 0.65, ttc_text, ...
     'FontSize', 18, 'FontWeight', 'bold', ...
     'HorizontalAlignment', 'center');

% TTC Îã®Í≥Ñ ÌÖçÏä§Ìä∏ Ï∂úÎ†• (ÏïÑÎûò)
text(0.5, 0.1, ttc_stage_text, ...
     'FontSize', 20, 'FontWeight', 'bold', ...
     'HorizontalAlignment', 'center', ...
     'Interpreter', 'tex');

title('TTC ÏãúÍ∞ÑÍ∞í');

    hold off;
    drawnow;

  %% ÏûêÏ∞® ÏÜçÎèÑ(Í≥ÑÍ∏∞Ìåê)
    subplot(6, 5, [21 26]);
    draw_speedometer(Speed2D(i));  % Ï≤´ Î≤àÏß∏ ÏÜçÎèÑÎ°ú Í≥ÑÍ∏∞ÌåêÍ≥º Î∞îÎäòÏùÑ Í∑∏Î¶¨Í∏∞


    wheel_speeds = [WHL_SPD_FL(i), WHL_SPD_FR(i), WHL_SPD_RL(i), WHL_SPD_RR(i)] / 3.6;
    slip_std = std(wheel_speeds);
    is_raining = (CF_Gway_RainSnsState(i)==1 || CF_Gway_WiperAutoSw(i)>0);
    slip_thresh = is_raining * 1.5 + (~is_raining) * 3.0;
    if slip_std > slip_thresh
        slip_warning = '‚ùó Ïä¨Î¶Ω Í∞êÏßÄ - ACC Ìï¥Ï†ú';
        warning_color = 'r';
    else
        slip_warning = '';
    end


    %% Ï°∞ÏÑ±Îπà Î∂ÄÎ∂Ñ
    
    subplot(6,5,18)
    cla;
    axis off;
    hold on;

    % ÏÉÅÌÉú ÌÖçÏä§Ìä∏ Í∏∞Î≥∏Í∞í
    slip_text = 'Ïä¨Î¶Ω ÏóÜÏùå';
    rain_text = 'ÎßëÏùå';
    wiper_text = 'Wiper OFF';

    % ÏÉâÏÉÅ ÏÑ§Ï†ï
    slip_color = [0 0.6 0];     % Ï¥àÎ°ù
    rain_color = [0 0.6 0];
    wiper_color = [0 0.6 0];

     wheel_speeds = [WHL_SPD_FL(i), WHL_SPD_FR(i), WHL_SPD_RL(i), WHL_SPD_RR(i)];

max_spd = max(wheel_speeds);
min_spd = min(wheel_speeds);
slip_diff = max_spd - min_spd;
slip_threshold = 5;  % Ïä¨Î¶Ω Í∏∞Ï§Ä ÏûÑÍ≥ÑÍ∞í [km/h]

    % Ïä¨Î¶Ω ÏÉÅÌÉú
    % if slip_std > slip_thresh
    if slip_diff > slip_threshold
        slip_text = 'Ïä¨Î¶Ω Í∞êÏßÄ';
        slip_color = [1 0 0];  % Îπ®Í∞ï
    end

    % Ïö∞Ï≤ú ÏÉÅÌÉú
    if is_raining
        rain_text = 'ÎπÑ Í∞êÏßÄ';
        rain_color = [0.1 0.4 1];  % ÌååÎûë
    end

    % ÏôÄÏù¥Ìçº ÏÉÅÌÉú
    if CF_Gway_WiperAutoSw(i) > 0
        wiper_text = 'Wiper ON';
        wiper_color = [0.3 0.3 0.9];
    end

    % ÌÖçÏä§Ìä∏Î°ú ÏãúÍ∞ÅÌôî
    text(0.1, 0.8, ['Ïä¨Î¶Ω ÏÉÅÌÉú: ' slip_text], 'Color', slip_color, 'FontSize', 12, 'FontWeight', 'bold');
    text(0.1, 0.5, ['Ïö∞Ï≤ú Í∞êÏßÄ: ' rain_text], 'Color', rain_color, 'FontSize', 12, 'FontWeight', 'bold');
    text(0.1, 0.2, ['ÏôÄÏù¥Ìçº: ' wiper_text], 'Color', wiper_color, 'FontSize', 12, 'FontWeight', 'bold');
    title('Ï∞®Îüâ ÌôòÍ≤Ω ÏÉÅÌÉú ÌëúÏãú', 'FontSize', 13)
    hold off;
    drawnow
    end